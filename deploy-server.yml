version: "3.7"
services:
  nginx:
    image: nginx:alpine
    networks:
      - backend
    environment:
      - TZ=$TIME_ZONE
    ports:
      - "127.0.0.1:${NGINX_PORT}:80"
      - "127.0.0.1:${NGINX_OTHER_PORT}:9090"
#      - "443:443"
    depends_on:
      - php8
    volumes:
      - $PROJECT_DIR:/var/www/html:rw
      - $OTHER_PROJECT_DIR:/var/www/webroot:rw
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/log:/var/log/nginx
    privileged: true
    extra_hosts:
      - host.docker.intenal:$LOCAL_IP_ADDR
    restart: always

  pgsql:
    image: postgres:alpine
    networks:
      - backend
    environment:
      - TZ=$TIME_ZONE
      - POSTGRES_PASSWORD=$PGSQL_PASSWORD
    volumes:
      - pgsql_data:/var/lib/postgresql/data:rw
    ports:
      - "127.0.0.1:${PGSQL_PORT}:5432"
    privileged: true
    restart: always

  mysql:
    image: mysql:latest
    networks:
      - backend
    environment:
      - TZ=$TIME_ZONE
      - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
    ports:
      - "127.0.0.1:${MYSQL_PORT}:3306"
    volumes:
      - ./mysql/data:/var/lib/mysql:rw
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    privileged: true
    restart: always

  es8:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    networks:
      - backend
    volumes:
      - ./es/data:/usr/share/elasticsearch/data
    ports:
      - "127.0.0.1:${ES_PORT}:9200"
    environment:
      - TZ=$TIME_ZONE
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - node.name=docker-node
      - ES_JAVA_OPTS=-Xmx1024M
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - xpack.security.enrollment.enabled=true
      - xpack.security.enabled=true
      - xpack.security.audit.enabled=true
      - ELASTIC_PASSWORD=$ES_PASSWORD
    restart: always
    privileged: true

  mongo:
    image: mongo
    networks:
      - backend
    ports:
      - "127.0.0.1:${MONGO_PORT}:27017"
    environment:
      - TZ=$TIME_ZONE
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USER
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    volumes:
      - mongo_data:/data/db:rw
      - mongo_config:/data/configdb:rw
    privileged: true
    restart: always

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    networks:
      - backend
    ports:
      - "127.0.0.1:${CH_PORT}:8123"
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    environment:
      - TZ=$TIME_ZONE
      - CLICKHOUSE_DB=default
      - CLICKHOUSE_USER=root
      - CLICKHOUSE_PASSWORD=123123
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
    volumes:
      - ./ch/data:/var/lib/clickhouse
      - ./ch/log:/var/log/clickhouse-server
    privileged: true
    restart: always

  neo4j:
    image: neo4j:latest
    networks:
      - backend
    ports:
      - "127.0.0.1:${NEO4J_PORT}:7474"
      - "127.0.0.1:${NEO4J_UI_PORT}:7687"
    environment:
      - TZ=$TIME_ZONE
      - NEO4J_dbms_security_auth__minimum__password__length=6
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD}
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/log:/logs
      - ./neo4j/conf:/var/lib/neo4j/conf
      - ./neo4j/import:/var/lib/neo4j/import
    privileged: true
    restart: always

  redis:
    image: redis:alpine
    networks:
      - backend
    ports:
      - "127.0.0.1:${REDIS_PORT}:6379"
    environment:
      - TZ=$TIME_ZONE
    command: redis-server /etc/redis/redis.conf
    volumes:
      - ./redis/redis.conf:/etc/redis/redis.conf
      - ./redis/data:/data:rw
    privileged: true
    restart: always

  memcached:
    image: memcached:alpine
    networks:
      - backend
    ports:
      - "127.0.0.1:${MEMCACHED_PORT}:11211"
    environment:
      - TZ=$TIME_ZONE
    privileged: true
    restart: always

  zookeeper:
    image: zookeeper:latest
    networks:
      - backend
    ports:
      - "127.0.0.1:${ZOOKEEPER_PORT}:2181"
    environment:
      - TZ=$TIME_ZONE
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/data
      - zookeeper_datalog:/datalog
      - ./zookeeper/log:/logs
    privileged: true
    restart: always

  kafka:
    image: bitnami/kafka:latest
    networks:
      - backend
    ports:
      - "${KAFKA_PORT}:9092"
    environment:
      - TZ=$TIME_ZONE
      - KAFKA_BROKER_ID=0
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:${ZOOKEEPER_PORT}
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://host.docker.internal:${KAFKA_PORT}
      - KAFKA_CFG_ZOOKEEPER_SESSION_TIMEOUT=6000
    volumes:
      - kafka_data:/bitnami
    depends_on:
      - zookeeper
    privileged: true
    restart: always

  rabbit:
    image: rabbitmq:management-alpine
    networks:
      - backend
    ports:
      - "127.0.0.1:${RABBIT_PORT}:5672"
      - "127.0.0.1:${RABBIT_UI_PORT}:15672"
    environment:
      - TZ=$TIME_ZONE
    volumes:
      - rabbit_data:/var/lib/rabbitmq:rw
      - ./rabbit/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    privileged: true
    restart: always
